/*

DESCRIPTION:
Consider an array/list of sheep where some sheep may be missing from their place. We need a function that counts the number of sheep present in the array (true means present).

For example,

[true,  true,  true,  false,
  true,  true,  true,  true ,
  true,  false, true,  false,
  true,  false, false, true ,
  true,  true,  true,  true ,
  false, false, true,  true]
The correct answer would be 17.

Hint: Don't forget to check for bad values like null/undefined


MY SOLUTION:


function countSheeps(arrayOfSheep) {

  let arrayLength = arrayOfSheep.length;  
  let sheepAmount = 0;
  
  for (let i = 0; i < arrayLength; i++) {
    if (arrayOfSheep[i] === true) {
      sheepAmount +=1;
    } else {
      sheepAmount +=0;    
    }
  }
  return sheepAmount;
}

DESCRIPTION:
Given an array of integers.

Return an array, where the first element is the count of positives numbers and the second element is sum of negative numbers. 0 is neither positive nor negative.

If the input is an empty array or is null, return an empty array.

Example
For input [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15], you should return [10, -65].

MY SOLUTION:

function countPositivesSumNegatives(input) {
  
  let posNum = 0;
  let negNum = 0;
  let result = [];
  
  if (input && input.length) {
     input.forEach((num) => num > 0 ? posNum++ : negNum += num);
  } else {
    return result;
  }
    result = [posNum, negNum];
    return result;    
}

DESCRIPTION:
Your task is to make two functions ( max and min, or maximum and minimum, etc., depending on the language ) that receive a list of integers as input, and return the largest and lowest number in that list, respectively.

Examples (Input -> Output)
* [4,6,2,1,9,63,-134,566]         -> max = 566, min = -134
* [-52, 56, 30, 29, -54, 0, -110] -> min = -110, max = 56
* [42, 54, 65, 87, 0]             -> min = 0, max = 87
* [5]                             -> min = 5, max = 5
Notes
You may consider that there will not be any empty arrays/vectors.

MY SOLUTION:

var min = function(list){
    
      return Math.min(...list);
    
}

var max = function(list){
  
      return Math.max(...list);
    
}

DESCRIPTION:
Complete the square sum function so that it squares each number passed into it and then sums the results together.

For example, for [1, 2, 2] it should return 9 because 1^2 + 2^2 + 2^2 = 9.

MY SOLUTION:

function squareSum(numbers){
  
  let sum = 0;
  y = numbers.length;
  
  for (i = 0; i < y; i++) {
    sum += Math.pow(numbers[i], 2);
  }
  
  return sum;
  
}

*/
